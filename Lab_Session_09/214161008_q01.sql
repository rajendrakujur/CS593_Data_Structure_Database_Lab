-- Product Table Creation
CREATE TABLE PRODUCT
(
    PRODUCT_ID INTEGER NOT NULL,
    PRODUCT_name VARCHAR(30) NOT NULL,
    PRICE_IN_USD FLOAT NOT NULL,
    CATEGORY VARCHAR(30) NOT NULL,
    MANUFACTURER VARCHAR(30) NOT NULL,
    PRIMARY KEY (PRODUCT_ID)
);

-- Purchase Table Creation
CREATE TABLE PURCHASE
(
    PRODUCT_ID INTEGER NOT NULL,
    BUYER_NAME VARCHAR(30) NOT NULL,
    PURCHASE_DATE DATE NOT NULL,
    PRICE_IN_USD FLOAT NOT NULL,
    PRIMARY KEY (PRODUCT_ID,BUYER_NAME),
    FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT(PRODUCT_ID)
);

-- INSERT INTO PRODUCT TABLE

INSERT INTO PRODUCT(PRODUCT_ID, PRODUCT_name,PRICE_IN_USD,CATEGORY,MANUFACTURER) VALUES (12,'Laptop',500,'Electronics','Dell');
INSERT INTO PRODUCT(PRODUCT_ID, PRODUCT_name,PRICE_IN_USD,CATEGORY,MANUFACTURER) VALUES (24,'Laptop',480,'Electronics','HP');
INSERT INTO PRODUCT(PRODUCT_ID, PRODUCT_name,PRICE_IN_USD,CATEGORY,MANUFACTURER) VALUES (42,'Laptop',900,'Electronics','Apple');
INSERT INTO PRODUCT(PRODUCT_ID, PRODUCT_name,PRICE_IN_USD,CATEGORY,MANUFACTURER) VALUES (65,'Laptop',460,'Electronics','Lenovo');
INSERT INTO PRODUCT(PRODUCT_ID, PRODUCT_name,PRICE_IN_USD,CATEGORY,MANUFACTURER) VALUES (47,'Laptop',450,'Electronics','Acer');
INSERT INTO PRODUCT(PRODUCT_ID, PRODUCT_name,PRICE_IN_USD,CATEGORY,MANUFACTURER) VALUES (23,'Laptop',540,'Electronics','Asus');
INSERT INTO PRODUCT(PRODUCT_ID, PRODUCT_name,PRICE_IN_USD,CATEGORY,MANUFACTURER) VALUES (27,'Laptop',550,'Electronics','Samsung');
INSERT INTO PRODUCT(PRODUCT_ID, PRODUCT_name,PRICE_IN_USD,CATEGORY,MANUFACTURER) VALUES (279,'Laptop',650,'Electronics','Huawei');
INSERT INTO PRODUCT(PRODUCT_ID, PRODUCT_name,PRICE_IN_USD,CATEGORY,MANUFACTURER) VALUES (7,'Mouse',40,'Electronics','Dell');
INSERT INTO PRODUCT(PRODUCT_ID, PRODUCT_name,PRICE_IN_USD,CATEGORY,MANUFACTURER) VALUES (69,'Mouse',35,'Electronics','Logitech');
INSERT INTO PRODUCT(PRODUCT_ID, PRODUCT_name,PRICE_IN_USD,CATEGORY,MANUFACTURER) VALUES (352,'Mouse',30,'Electronics','HP');
INSERT INTO PRODUCT(PRODUCT_ID, PRODUCT_name,PRICE_IN_USD,CATEGORY,MANUFACTURER) VALUES (689,'SolID State Drive',120,'Electronics','Kingston');
INSERT INTO PRODUCT(PRODUCT_ID, PRODUCT_name,PRICE_IN_USD,CATEGORY,MANUFACTURER) VALUES (64,'SolID State Drive',115,'Electronics','Corsair');
INSERT INTO PRODUCT(PRODUCT_ID, PRODUCT_name,PRICE_IN_USD,CATEGORY,MANUFACTURER) VALUES (353,'SolID State Drive',130,'Electronics','Samsung');
INSERT INTO PRODUCT(PRODUCT_ID, PRODUCT_name,PRICE_IN_USD,CATEGORY,MANUFACTURER) VALUES (68,'KEYboard',12,'Electronics','Dell');


-- INSERT INTO PURCHASE TABLE

INSERT INTO PURCHASE(PRODUCT_ID, BUYER_NAME,PURCHASE_DATE,PRICE_IN_USD) VALUES (65,'Kamal',DATE('2012-12-17'),460);
INSERT INTO PURCHASE(PRODUCT_ID, BUYER_NAME,PURCHASE_DATE,PRICE_IN_USD) VALUES (7,'Gaurav',DATE('2012-12-11'),24);
INSERT INTO PURCHASE(PRODUCT_ID, BUYER_NAME,PURCHASE_DATE,PRICE_IN_USD) VALUES (65,'Neeraj',DATE('2018-12-27'),460);
INSERT INTO PURCHASE(PRODUCT_ID, BUYER_NAME,PURCHASE_DATE,PRICE_IN_USD) VALUES (7,'Abhinav',DATE('2014-10-18'),12);
INSERT INTO PURCHASE(PRODUCT_ID, BUYER_NAME,PURCHASE_DATE,PRICE_IN_USD) VALUES (68,'Gaurang',DATE('2019-01-02'),80);
INSERT INTO PURCHASE(PRODUCT_ID, BUYER_NAME,PURCHASE_DATE,PRICE_IN_USD) VALUES (27,'Kamlesh',DATE('2011-08-22'),550);
INSERT INTO PURCHASE(PRODUCT_ID, BUYER_NAME,PURCHASE_DATE,PRICE_IN_USD) VALUES (42,'Budhar',DATE('2015-10-17'),900);
INSERT INTO PURCHASE(PRODUCT_ID, BUYER_NAME,PURCHASE_DATE,PRICE_IN_USD) VALUES (27,'Mann',DATE('2013-04-19'),460);
INSERT INTO PURCHASE(PRODUCT_ID, BUYER_NAME,PURCHASE_DATE,PRICE_IN_USD) VALUES (47,'Udghosh',DATE('2012-04-05'),309);
INSERT INTO PURCHASE(PRODUCT_ID, BUYER_NAME,PURCHASE_DATE,PRICE_IN_USD) VALUES (42,'Vinay',DATE('2013-04-19'),900);
INSERT INTO PURCHASE(PRODUCT_ID, BUYER_NAME,PURCHASE_DATE,PRICE_IN_USD) VALUES (279,'Rakesh',DATE('2014-10-18'),460);
INSERT INTO PURCHASE(PRODUCT_ID, BUYER_NAME,PURCHASE_DATE,PRICE_IN_USD) VALUES (27,'Niranjan',DATE('2014-10-18'),550);
INSERT INTO PURCHASE(PRODUCT_ID, BUYER_NAME,PURCHASE_DATE,PRICE_IN_USD) VALUES (65,'Kuldeep',DATE('2012-04-05'),460);
INSERT INTO PURCHASE(PRODUCT_ID, BUYER_NAME,PURCHASE_DATE,PRICE_IN_USD) VALUES (352,'Rajeev',DATE('2019-01-02'),82);
INSERT INTO PURCHASE(PRODUCT_ID, BUYER_NAME,PURCHASE_DATE,PRICE_IN_USD) VALUES (689,'Atmanand',DATE('2013-04-19'),270);
INSERT INTO PURCHASE(PRODUCT_ID, BUYER_NAME,PURCHASE_DATE,PRICE_IN_USD) VALUES (69,'Jothiprakash',DATE('2011-08-22'),650);
INSERT INTO PURCHASE(PRODUCT_ID, BUYER_NAME,PURCHASE_DATE,PRICE_IN_USD) VALUES (65,'Shubham',DATE('2013-04-19'),460);
INSERT INTO PURCHASE(PRODUCT_ID, BUYER_NAME,PURCHASE_DATE,PRICE_IN_USD) VALUES (23,'Rishabh',DATE('2012-12-17'),540);
INSERT INTO PURCHASE(PRODUCT_ID, BUYER_NAME,PURCHASE_DATE,PRICE_IN_USD) VALUES (12,'Rohan',DATE('2019-01-27'),60);
INSERT INTO PURCHASE(PRODUCT_ID, BUYER_NAME,PURCHASE_DATE,PRICE_IN_USD) VALUES (64,'Akash',DATE('2018-12-27'),460);
INSERT INTO PURCHASE(PRODUCT_ID, BUYER_NAME,PURCHASE_DATE,PRICE_IN_USD) VALUES (353,'Amit',DATE('2013-04-19'),120.4);

SELECT * FROM PRODUCT;
SELECT * FROM PURCHASE;

-- (I) Write a stored procedures which outputs the date on which maximum number of products was purchased.
-- Done 

DELIMITER //
CREATE PROCEDURE MAX_PRODUCT_PURCHASING_DATE(OUT PURCHASING_DATE DATE)
BEGIN
    SELECT PURCHASE_DATE INTO PURCHASING_DATE
    FROM PURCHASE
    GROUP BY PURCHASE_DATE
    ORDER BY COUNT(PRODUCT_ID) DESC
    LIMIT 1;

    SELECT PURCHASING_DATE;
END;
//
DELIMITER ;

CALL MAX_PRODUCT_PURCHASING_DATE(@PURCHASING_DATE);

-- (II) Write a stored procedure which returns the number of products by a given date.
-- Done

DELIMITER //
CREATE PROCEDURE PRODUCTS_PURCHASED_ON(IN PURCHASING_DATE DATE)
BEGIN
    DECLARE PRODUCTS_PURCHASED INTEGER DEFAULT 0;
    SELECT COUNT(PRODUCT_ID) INTO PRODUCTS_PURCHASED
    FROM PURCHASE
    WHERE PURCHASE_DATE = PURCHASING_DATE
    GROUP BY PURCHASE_DATE
    ORDER BY COUNT(PRODUCT_ID);

    SELECT PRODUCTS_PURCHASED;
END;
//
DELIMITER ;

CALL PRODUCTS_PURCHASED_ON('2013-04-19');

-- (III) Write a store procedure which takes prodId of a product as input and check the price and
-- print ‘GREATER THAN 100’, ‘EQUAL to 100’ or ‘LESS THAN 100’ after comparing the price
-- Done 

DELIMITER //
CREATE PROCEDURE COMPARE_TO_100(IN ID INTEGER)
BEGIN
    DECLARE PRICE INTEGER DEFAULT 0; 
    DECLARE RESULT VARCHAR(50) DEFAULT '';

    SELECT PRICE_IN_USD INTO PRICE
    FROM PRODUCT 
    WHERE PRODUCT_ID = ID;

    IF PRICE = 0 THEN
        SET RESULT = 'PRODUCT NOT FOUND';
    ELSEIF PRICE > 100 THEN
        SET RESULT = 'GREATER THAN 100';
    ELSEIF PRICE = 100 THEN 
        SET RESULT = 'EQUAL to 100';
    ELSEIF PRICE < 100 THEN
        SET RESULT = 'LESS THAN 100';
    END IF;
    SELECT CONCAT('COMPARED TO 100 : ', RESULT);
END;
//
DELIMITER ;

CALL COMPARE_TO_100(64);
CALL COMPARE_TO_100(0);
